[project]
name = "conversation-assistant"
version = "0.1.0"
description = "Multi-user conversation assistant with MCP server and Gemini AI integration"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "motor>=3.3.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "httpx>=0.26.0",
    "python-dotenv>=1.0.0",
    "google-generativeai>=0.3.0",
    "pymongo>=4.6.0",
    "python-multipart>=0.0.9",
    "websockets>=12.0",
    "aiofiles>=23.2.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "redis>=5.0.0",
    "tenacity>=8.2.0",
    "structlog>=24.1.0",
    "mcp>=0.1.0",
    "aioconsole>=0.7.0",
    "rich>=13.7.0",
    "prompt-toolkit>=3.0.0",
    "whatsapp-web>=0.0.1",
    "qrcode>=7.4.0",
    "Pillow>=10.0.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=24.1.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
    "ipdb>=0.13.0",
]

[project.scripts]
api = "src.api.main:main"
mcp-server = "src.mcp.server:main"
mcp-client = "src.client.terminal:main"
whatsapp-client = "src.client.whatsapp_qr_client:main"
whatsapp-enhanced = "src.client.whatsapp_enhanced:main"
whatsapp-terminal = "src.client.whatsapp_terminal:main"
migrate = "scripts.migrate:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ARG001", "ARG002"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]